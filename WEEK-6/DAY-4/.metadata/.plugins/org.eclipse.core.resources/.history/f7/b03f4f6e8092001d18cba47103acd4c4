package it.epicode.G4;

public class Dipendente {

//	Properties ------------------------------------------------------------------
	public static double stipendioBase = 1000;

	private int matricola;
	private double stipendio;
	private double importoOrarioStraordinario;
	private Livello livello;
	private Dipartimento dipartimento;

//	Constructors ------------------------------------------------------------------
	public Dipendente(int matricola, double stipendio, double importoOrarioStraordinario, Livello string,
			Dipartimento string2) {
		this.matricola = matricola;
		this.stipendio = stipendio;
		this.importoOrarioStraordinario = importoOrarioStraordinario;
		this.livello = string;
		this.dipartimento = string2;
	}

	public Dipendente(int matricola, Dipartimento dipartimento) {
		this.matricola = matricola;
		this.dipartimento = dipartimento;
		this.stipendio = this.stipendioBase;
		this.importoOrarioStraordinario = 30;
//		this.livello = ?;
	}

//	Getters ------------------------------------------------------------------
	public int getMatricola() {
		return matricola;
	}

	public double getStipendio() {
		return stipendio;
	}

	public Livello getLivello() {
		return livello;
	}

	public Dipartimento getDipartimento() {
		return dipartimento;
	}

	public double getImportoOrarioStraordinario() {
		return importoOrarioStraordinario;
	}

//	Setters ------------------------------------------------------------------
	public void setImportoOrarioStraordinario(double importoOrarioStraordinario) {
		this.importoOrarioStraordinario = importoOrarioStraordinario;
	}

	public void setDipartimento(Dipartimento dipartimento) {
		this.dipartimento = dipartimento;
	}

//	Methods
	public void stampaDatiDipendente() {
		System.out.printf("Dipendente: %n - Matricola: %d:%n - Livello: %s;%n - Dipartimento: %s;%n - Stipendio: %f%n",
				matricola, livello, dipartimento, stipendio);
	}

	public String promuovi() {
		switch (livello) {
		case OPERAIO:
			livello = livello.IMPIEGATO;
			stipendio = stipendioBase*1.2;
			break;
		case IMPIEGATO:
			livello = livello.QUADRO;
			stipendio = stipendioBase*1.5;
			break;
		case QUADRO:
			livello = livello.DIRIGENTE;
			stipendio = stipendioBase*2;
			break;
		case DIRIGENTE:
			System.out.println("Errore, il Dirigente e gia il ruolo piu importante");
			break;
//			DEFAULT?
		}
		return "Promozione avvenuta con successo, nuova posizione: " + livello;
	}

}
