package it.epicode.G4;

public class Dipendente {

//	Properties ------------------------------------------------------------------
	public static double stipendioBase = 1000;

	private int matricola;
	private double stipendio;
	private double importoOrarioStraordinario;
	private Livello livello;
	private Dipartimento dipartimento;

//	Constructors ------------------------------------------------------------------
	public Dipendente(int matricola, double stipendio, double importoS,  Livello string, Dipartimento string2) {
		this.matricola = matricola;
		this.stipendio = stipendio;
		this.importoOrarioStraordinario = importoS;
		this.livello = string;
		this.dipartimento = string2;
	}

	public Dipendente(int matricola, Dipartimento dipartimento) {
		this.matricola = matricola;
		this.importoOrarioStraordinario = 30;
		this.livello = Livello.OPERAIO;
		this.stipendio = Dipendente.stipendioBase*this.livello.getMoltiplicatoreStipendio();
		this.dipartimento = dipartimento;
	}

//	Getters ------------------------------------------------------------------
	public int getMatricola() {
		return matricola;
	}

	public double getStipendio() {
		return stipendio;
	}

	public Livello getLivello() {
		return livello;
	}

	public Dipartimento getDipartimento() {
		return dipartimento;
	}

	public double getImportoOrarioStraordinario() {
		return importoOrarioStraordinario;
	}

//	Setters ------------------------------------------------------------------
	public void setImportoOrarioStraordinario(double importoOrarioStraordinario) {
		this.importoOrarioStraordinario = importoOrarioStraordinario;
	}

	public void setDipartimento(Dipartimento dipartimento) {
		this.dipartimento = dipartimento;
	}

//	Methods
	public void stampaDatiDipendente() {
		System.out.printf("Dipendente: %n - Matricola: %d:%n - Livello: %s;%n - Dipartimento: %s;%n - Stipendio: %f%n",
				matricola, livello, dipartimento, stipendio);
	}

	public Livello promuovi() {
		if (this.livello == Livello.OPERAIO) {
			this.stipendio = Dipendente.stipendioBase*Livello.IMPIEGATO.getMoltiplicatoreStipendio();
			return Livello.IMPIEGATO;
		} else if (this.livello == Livello.IMPIEGATO) {
			this.stipendio = Dipendente.stipendioBase*Livello.QUADRO.getMoltiplicatoreStipendio();
			return Livello.QUADRO;
		} else if (this.livello == Livello.QUADRO) {
			this.stipendio = Dipendente.stipendioBase*Livello.DIRIGENTE.getMoltiplicatoreStipendio();
			return Livello.DIRIGENTE;
		} else {
			System.out.println("Errore, il Dirigente e gia il ruolo piu importante");
			return this.livello;
		}
	}
	
//	Static Method 
	public double calcolaPaga(Dipendente d) {
		return d.getStipendio();
	}
	
	public static double calcolaPaga(Dipendente d, int n) {
		return (d.getStipendio()) + (d.getImportoOrarioStraordinario() * n);
	}

}
